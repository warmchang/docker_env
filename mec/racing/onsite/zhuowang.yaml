---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-facego
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-facego: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-facego
          image: "registry.sigma.cmri/test/facego:v1.1"
          imagePullPolicy: Always
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,utility"
            - name: NVIDIA_REQUIRE_CUDA
              value: "cuda>=5.0"
          securityContext:
            allowPrivilegeEscalation: true
            # capabilities:
            #   drop: ["ALL"]
            seLinuxOptions:
              type: nvidia_container_t
          # command: ['bash']
          # args: ["/opt/start.sh"]
          ports:                              
            - containerPort: 7100
              protocol: "TCP"
              hostPort: 20000
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-zk1
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-zk1: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-zk1
          image: "registry.sigma.cmri/test/zookeeper:latest"
          imagePullPolicy: Always
          # command: ['bash']
          # args: ["/opt/start.sh"]
          ports:                              
            - containerPort: 2181
              protocol: "TCP"
              hostPort: 2181
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-kaf1
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-kaf1: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-kaf1
          image: "registry.sigma.cmri/test/kafka:latest"
          imagePullPolicy: Always
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "192.168.40.116:2181"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: "127.0.0.1"
          # command: ['bash']
          # args: ["/opt/start.sh"]
          ports:                              
            - containerPort: 9092
              protocol: "TCP"
              hostPort: 9092
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-mysql-oc
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-mysql-oc: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-mysql-oc
          image: "registry.sigma.cmri/test/mysql-oc:last"
          imagePullPolicy: Always
          securityContext:
            privileged: true
          # command: ['bash']
          # args: ["/opt/start.sh"]
          ports:                              
            - containerPort: 3306
              protocol: "TCP"
              hostPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql
      volumes:
        - hostPath:
            path: /data/zw/mysql
          name: mysql
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-redisp
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-redisp: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-redisp
          image: "registry.sigma.cmri/test/redis:latest"
          imagePullPolicy: Always
          # command: ['bash']
          args: ["--requirepass","Anfang@123!"]
          ports:                              
            - containerPort: 6379
              protocol: "TCP"
              hostPort: 6379
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-nginx-oc
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-nginx-oc: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-nginx-oc
          image: "registry.sigma.cmri/test/nginx-ocean:v1"
          imagePullPolicy: Always
          env:
            - name: key_ocean
              value: "192.168.40.116"
            - name: key_facebigdata
              value: "192.168.40.116"
            - name: key_ocean_manage
              value: "192.168.40.116"
            - name: ocean_entry_http
              value: "192.168.40.116"
            - name: key_ocean_socket_ip
              value: "192.168.40.116"
          # command: ['bash']
          # args: ["--requirepass","Anfang@123!"]
          # ports:                              
          #   - containerPort: 6379
          #     protocol: "TCP"
          #     hostPort: 6379
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      volumes:
        - hostPath:
            path: /data/zw/nasdata
          name: nasdata
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-api-oc
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-api-oc: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-api-oc
          image: "registry.sigma.cmri/test/ocean-api:last"
          imagePullPolicy: Always
          env:
            - name: nginx_img_url
              value: "192.168.40.116"
            - name: key_ocean_ip
              value: "192.168.40.116"
            - name: mysql_ip
              value: "192.168.40.116"
            - name: kafka_address
              value: "192.168.40.116:9092"
            - name: zookeeper_address
              value: "192.168.40.116:2181"
            - name: engine_ip
              value: "192.168.40.116"
            - name: orc_ip
              value: "192.168.40.116"
            - name: orc_live_ip
              value: "192.168.40.116"
            - name: redis_ip
              value: "192.168.40.116"
            - name: ftp_ip
              value: "192.168.40.116"
          # command: ['bash']
          # args: ["--requirepass","Anfang@123!"]
          ports:                              
            - containerPort: 11006
              protocol: "TCP"
              hostPort: 11006
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      volumes:
        - hostPath:
            path: /data/zw/nasdata
          name: nasdata
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-ocean-deletefile
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-ocean-deletefile: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-ocean-deletefile
          image: "registry.sigma.cmri/test/ocean-deletefile:v1"
          imagePullPolicy: Always
          env:
            - name: nginx_img_url
              value: "192.168.40.116"
            - name: mysql_ip
              value: "192.168.40.116"
          # command: ['bash']
          # args: ["--requirepass","Anfang@123!"]
          ports:                              
            - containerPort: 11010
              protocol: "TCP"
              hostPort: 11010
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      volumes:
        - hostPath:
            path: /data/zw/nasdata_2
          name: nasdata
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-ocean-manager
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-ocean-manager: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-ocean-manager
          image: "registry.sigma.cmri/test/ocean-manager:v1"
          imagePullPolicy: Always
          env:
            - name: nginx_img_url
              value: "192.168.40.116"
            - name: mysql_ip
              value: "192.168.40.116"
            - name: kafka_address
              value: "192.168.40.116:9092"
            - name: zookeeper_address
              value: "192.168.40.116:2181"
            - name: engine_ip
              value: "192.168.40.116"
            - name: orc_ip
              value: "192.168.40.116"
            - name: orc_live_ip
              value: "192.168.40.116"
            - name: redis_ip
              value: "192.168.40.116"
          # command: ['bash']
          # args: ["--requirepass","Anfang@123!"]
          ports:                              
            - containerPort: 11007
              protocol: "TCP"
              hostPort: 11007
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      volumes:
        - hostPath:
            path: /data/zw/nasdata_2
          name: nasdata
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-ocean-socket
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-ocean-socket: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-ocean-socket
          image: "registry.sigma.cmri/test/ocean-socket:v1"
          imagePullPolicy: Always
          env:
            - name: nginx_img_url
              value: "192.168.40.116"
            - name: mysql_ip
              value: "192.168.40.116"
            - name: kafka_address
              value: "192.168.40.116:9092"
            - name: zookeeper_address
              value: "192.168.40.116:2181"
            - name: engine_ip
              value: "192.168.40.116"
            - name: redis_ip
              value: "192.168.40.116"
          # command: ['bash']
          # args: ["--requirepass","Anfang@123!"]
          ports:                              
            - containerPort: 11011
              protocol: "TCP"
              hostPort: 11011
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      volumes:
        - hostPath:
            path: /data/zw/nasdata_2
          name: nasdata
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-rtmp-server
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-rtmp-server: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-rtmp-server
          image: "registry.sigma.cmri/test/centos-7-nginx-rtmp:latest"
          imagePullPolicy: Always
          # command: ['/usr/local/nginx/nginx']
          args: [/bin/sh, -c, '/usr/local/nginx/nginx && tail -f /dev/null']
          ports:                              
            - containerPort: 9999
              protocol: "TCP"
              hostPort: 9999
---
kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: zw-mobilesoldierservice
  namespace: zhuowang
spec:
  hostNetwork: true
  replicas: 1
  template: 
    metadata:
      labels:
        zw-mobilesoldierservice: "true"
    spec:
      nodeSelector:
        # type: infra
        kubernetes.io/hostname: node3.sigma.cmri
      serviceAccountName: mysvcacct
      containers:
        - name: zw-mobilesoldierservice
          image: "registry.sigma.cmri/test/mobilesoldier:v0.2"
          imagePullPolicy: Always
          env:
            - name: appid
              value: 'a54fce347adf4ca88f740c0eb230e4e3'
            - name: appsecret
              value: '$2a$10$dJDxml5rWVC4EanD7TbsgOfqTwcr/tcq5DAGR6KIwBrqo4GuPUHte'
            - name: oceanaddress
              value: 'http://192.168.40.116:10006'
            - name: mqttserverurl
              value: 'tcp://localHost:1883'
            - name: subaddress
              value: 'http://192.168.40.116:18080'
          command: ['/myapp/EasyDarwin/EasyDarwin-linux-8.1.0-1901141151/easydarwin']
          # args: ["--requirepass","Anfang@123!"]
          ports:                              
            - containerPort: 1883
              protocol: "TCP"
              hostPort: 1883
            - containerPort: 10554
              protocol: "TCP"
              hostPort: 10554
            - containerPort: 18080
              protocol: "TCP"
              hostPort: 18081

