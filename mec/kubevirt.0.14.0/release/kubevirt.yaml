---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubevirt.io: ""
    prometheus.kubevirt.io: ""
  name: kubevirt-prometheus-metrics
  namespace: kubevirt
spec:
  ports:
  - name: metrics
    port: 443
    protocol: TCP
    targetPort: metrics
  selector:
    prometheus.kubevirt.io: ""

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    kubevirt.io: ""
  name: kubevirt.io:default
rules:
- apiGroups:
  - subresources.kubevirt.io
  resources:
  - version
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubevirt.io: ""
  name: kubevirt.io:default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevirt.io:default
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:unauthenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kubevirt.io:admin
rules:
- apiGroups:
  - subresources.kubevirt.io
  resources:
  - virtualmachineinstances/console
  - virtualmachineinstances/vnc
  verbs:
  - get
- apiGroups:
  - subresources.kubevirt.io
  resources:
  - virtualmachines/restart
  verbs:
  - put
  - update
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  - virtualmachineinstances
  - virtualmachineinstancepresets
  - virtualmachineinstancereplicasets
  verbs:
  - get
  - delete
  - create
  - update
  - patch
  - list
  - watch
  - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: kubevirt.io:edit
rules:
- apiGroups:
  - subresources.kubevirt.io
  resources:
  - virtualmachineinstances/console
  - virtualmachineinstances/vnc
  verbs:
  - get
- apiGroups:
  - subresources.kubevirt.io
  resources:
  - virtualmachines/restart
  verbs:
  - put
  - update
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  - virtualmachineinstances
  - virtualmachineinstancepresets
  - virtualmachineinstancereplicasets
  verbs:
  - get
  - delete
  - create
  - update
  - patch
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kubevirt.io:view
rules:
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  - virtualmachineinstances
  - virtualmachineinstancepresets
  - virtualmachineinstancereplicasets
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-privileged
  namespace: kubevirt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-privileged-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubevirt-privileged
  namespace: kubevirt
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-apiserver
  namespace: kubevirt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-apiserver
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - create
  - update
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  - virtualmachineinstances
  - virtualmachineinstancemigrations
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachineinstancepresets
  verbs:
  - watch
  - list
- apiGroups:
  - ""
  resourceNames:
  - extension-apiserver-authentication
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - limitranges
  verbs:
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevirt-apiserver
subjects:
- kind: ServiceAccount
  name: kubevirt-apiserver
  namespace: kubevirt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-apiserver-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubevirt-apiserver
  namespace: kubevirt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-apiserver
  namespace: kubevirt
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-apiserver
  namespace: kubevirt
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubevirt-apiserver
subjects:
- kind: ServiceAccount
  name: kubevirt-apiserver
  namespace: kubevirt
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-controller
  namespace: kubevirt
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - endpoints
  verbs:
  - get
  - list
  - watch
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - update
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubevirt.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - cdi.kubevirt.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kubevirt.io: ""
  name: kubevirt-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevirt-controller
subjects:
- kind: ServiceAccount
  name: kubevirt-controller
  namespace: kubevirt

---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubevirt.io: virt-api
  name: virt-api
  namespace: kubevirt
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    kubevirt.io: virt-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubevirt.io: virt-api
  name: virt-api
  namespace: kubevirt
spec:
  replicas: 2
  selector:
    matchLabels:
      kubevirt.io: virt-api
  strategy: {}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly","operator":"Exists"}]'
      labels:
        kubevirt.io: virt-api
        prometheus.kubevirt.io: ""
      name: virt-api
    spec:
      containers:
      - command:
        - virt-api
        - --port
        - "8443"
        - --subresources-only
        - -v
        - "2"
        image: registry.redhat.ren/kubevirt/virt-api:v0.14.0
        imagePullPolicy: IfNotPresent
        name: virt-api
        ports:
        - containerPort: 8443
          name: virt-api
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /apis/subresources.kubevirt.io/v1alpha3/healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
        resources: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubevirt-apiserver

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubevirt.io: virt-controller
  name: virt-controller
  namespace: kubevirt
spec:
  replicas: 2
  selector:
    matchLabels:
      kubevirt.io: virt-controller
  strategy: {}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly","operator":"Exists"}]'
      labels:
        kubevirt.io: virt-controller
        prometheus.kubevirt.io: ""
      name: virt-controller
    spec:
      containers:
      - command:
        - virt-controller
        - --launcher-image
        - registry.redhat.ren/kubevirt/virt-launcher:v0.14.0
        - --port
        - "8443"
        - -v
        - "2"
        image: registry.redhat.ren/kubevirt/virt-controller:v0.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 10
        name: virt-controller
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /leader
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 10
        resources: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubevirt-controller

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    kubevirt.io: virt-handler
  name: virt-handler
  namespace: kubevirt
spec:
  selector:
    matchLabels:
      kubevirt.io: virt-handler
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly","operator":"Exists"}]'
      labels:
        kubevirt.io: virt-handler
        prometheus.kubevirt.io: ""
      name: virt-handler
    spec:
      containers:
      - command:
        - virt-handler
        - --port
        - "8443"
        - --hostname-override
        - $(NODE_NAME)
        - --pod-ip-address
        - $(MY_POD_IP)
        - -v
        - "2"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: registry.redhat.ren/kubevirt/virt-handler:v0.14.0
        imagePullPolicy: IfNotPresent
        name: virt-handler
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/kubevirt-libvirt-runtimes
          name: libvirt-runtimes
        - mountPath: /var/run/kubevirt
          name: virt-share-dir
        - mountPath: /var/run/kubevirt-private
          name: virt-private-dir
        - mountPath: /var/lib/kubelet/device-plugins
          name: device-plugin
      hostPID: true
      serviceAccountName: kubevirt-privileged
      volumes:
      - hostPath:
          path: /var/run/kubevirt-libvirt-runtimes
        name: libvirt-runtimes
      - hostPath:
          path: /var/run/kubevirt
        name: virt-share-dir
      - hostPath:
          path: /var/run/kubevirt-private
        name: virt-private-dir
      - hostPath:
          path: /var/lib/kubelet/device-plugins
        name: device-plugin
  updateStrategy:
    type: RollingUpdate

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    kubevirt.io: ""
  name: virtualmachineinstances.kubevirt.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.phase
    name: Phase
    type: string
  - JSONPath: .status.interfaces[0].ipAddress
    name: IP
    type: string
  - JSONPath: .status.nodeName
    name: NodeName
    type: string
  group: kubevirt.io
  names:
    kind: VirtualMachineInstance
    plural: virtualmachineinstances
    shortNames:
    - vmi
    - vmis
    singular: virtualmachineinstance
  scope: Namespaced
  version: v1alpha3

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    kubevirt.io: ""
  name: virtualmachineinstancereplicasets.kubevirt.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: Number of desired VirtualMachineInstances
    name: Desired
    type: integer
  - JSONPath: .status.replicas
    description: Number of managed and not final or deleted VirtualMachineInstances
    name: Current
    type: integer
  - JSONPath: .status.readyReplicas
    description: Number of managed VirtualMachineInstances which are ready to receive
      traffic
    name: Ready
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: kubevirt.io
  names:
    kind: VirtualMachineInstanceReplicaSet
    plural: virtualmachineinstancereplicasets
    shortNames:
    - vmirs
    - vmirss
    singular: virtualmachineinstancereplicaset
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
  version: v1alpha3

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    kubevirt.io: ""
  name: virtualmachineinstancepresets.kubevirt.io
spec:
  group: kubevirt.io
  names:
    kind: VirtualMachineInstancePreset
    plural: virtualmachineinstancepresets
    shortNames:
    - vmipreset
    - vmipresets
    singular: virtualmachineinstancepreset
  scope: Namespaced
  version: v1alpha3

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    kubevirt.io: ""
  name: virtualmachines.kubevirt.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .spec.running
    name: Running
    type: boolean
  - JSONPath: .spec.volumes[0].name
    description: Primary Volume
    name: Volume
    type: string
  group: kubevirt.io
  names:
    kind: VirtualMachine
    plural: virtualmachines
    shortNames:
    - vm
    - vms
    singular: virtualmachine
  scope: Namespaced
  version: v1alpha3

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    kubevirt.io: ""
  name: virtualmachineinstancemigrations.kubevirt.io
spec:
  group: kubevirt.io
  names:
    kind: VirtualMachineInstanceMigration
    plural: virtualmachineinstancemigrations
    shortNames:
    - vmim
    - vmims
    singular: virtualmachineinstancemigration
  scope: Namespaced
  version: v1alpha3
