#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /
    monitor-uri /healthz


frontend openshift-api-server
    bind *:6443
    default_backend openshift-api-server
    mode tcp
    option tcplog

backend openshift-api-server
    balance source
    mode tcp
    server bootstrap 192.168.7.12:6443 check
    server master-0 192.168.7.13:6443 check
    server master-1 192.168.7.14:6443 check
    server master-2 192.168.7.15:6443 check
    
frontend machine-config-server
    bind *:22623
    default_backend machine-config-server
    mode tcp
    option tcplog

backend machine-config-server
    balance source
    mode tcp
    server bootstrap 192.168.7.12:22623 check
    server master-0 192.168.7.13:22623 check
    server master-1 192.168.7.14:22623 check
    server master-2 192.168.7.15:22623 check
  
frontend ingress-http
    bind *:80
    default_backend ingress-http
    mode tcp
    option tcplog

backend ingress-http
    balance source
    mode tcp
    server worker-0-http-router0 192.168.7.16:80 check
    server worker-1-http-router1 192.168.7.17:80 check
    server worker-2-http-router2 192.168.7.18:80 check
    server infra-0-http-router3 192.168.7.19:80 check
    server infra-1-http-router4 192.168.7.20:80 check
    server worker-3-http-router5 192.168.7.21:80 check
    server worker-4-http-router6 192.168.7.22:80 check
   
frontend ingress-https
    bind *:443
    default_backend ingress-https
    mode tcp
    option tcplog

backend ingress-https
    balance source
    mode tcp
    server worker-0-https-router0 192.168.7.16:443 check
    server worker-1-https-router1 192.168.7.17:443 check
    server worker-2-https-router2 192.168.7.18:443 check
    server infra-0-https-router3 192.168.7.19:443 check
    server infra-1-https-router4 192.168.7.20:443 check
    server worker-3-https-router5 192.168.7.21:443 check
    server worker-4-https-router6 192.168.7.22:443 check

#---------------------------------------------------------------------
