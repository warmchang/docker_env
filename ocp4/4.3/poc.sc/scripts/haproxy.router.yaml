kind: Deployment
apiVersion: apps/v1
metadata:
  name: wzh-router-0
  namespace: openshift-ingress
  labels:
    ingresscontroller.operator.openshift.io/owning-ingresscontroller: wzh-router-0
spec:
  replicas: 1
  selector:
    matchLabels:
      ingresscontroller.operator.openshift.io/deployment-ingresscontroller: wzh-router-0
  template:
    metadata:
      labels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: wzh-router-0
    spec:
      nodeSelector:
        kubernetes.io/hostname: "vm-router-0.ocpsc.redhat.ren"
      restartPolicy: Always
      serviceAccountName: router
      schedulerName: default-scheduler
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            requests:
              cpu: 100m
              memory: 256Mi
          name: router
          env:
            - name: STATS_PORT
              value: "19360"
            - name: WZH_ROUTER_NAME
              value: wzh-router-0
            - name: ROUTER_SERVICE_NAMESPACE
              value: openshift-ingress
            - name: DEFAULT_CERTIFICATE_DIR
              value: /etc/pki/tls/private
            - name: ROUTER_SERVICE_NAME
              value: default
            - name: STATS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsUsername
            - name: STATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsPassword
            - name: ROUTER_METRICS_TYPE
              value: haproxy
            - name: ROUTER_METRICS_TLS_CERT_FILE
              value: /etc/pki/tls/metrics-certs/tls.crt
            - name: ROUTER_METRICS_TLS_KEY_FILE
              value: /etc/pki/tls/metrics-certs/tls.key
            - name: ROUTER_CANONICAL_HOSTNAME
              value: apps.ocp4.redhat.ren
            - name: ROUTER_THREADS
              value: "4"
            - name: TEMPLATE_FILE
              value: /var/lib/haproxy/conf/custom/haproxy-config.template
          ports:
            - name: metrics
              hostPort: 19360
              containerPort: 19360
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: default-certificate
              readOnly: true
              mountPath: /etc/pki/tls/private
            - name: metrics-certs
              readOnly: true
              mountPath: /etc/pki/tls/metrics-certs
            - name: config-volume
              mountPath: /var/lib/haproxy/conf/custom
          terminationMessagePolicy: FallbackToLogsOnError
          image: >-
            quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08ba9cb4f45c557b2ec8cea6528bb60b1efcd3a7588046a71f5babe19e5fc9c0
      serviceAccount: router
      volumes:
        - name: default-certificate
          secret:
            secretName: custom-certs-default
            defaultMode: 420
        - name: metrics-certs
          secret:
            secretName: router-metrics-certs-default
            defaultMode: 420
        - name: config-volume
          configMap:
            name: customrouter-wzh
            defaultMode: 420
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: wzh-router-1
  namespace: openshift-ingress
  labels:
    ingresscontroller.operator.openshift.io/owning-ingresscontroller: wzh-router-1
spec:
  replicas: 1
  selector:
    matchLabels:
      ingresscontroller.operator.openshift.io/deployment-ingresscontroller: wzh-router-1
  template:
    metadata:
      labels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: wzh-router-1
    spec:
      nodeSelector:
        kubernetes.io/hostname: "vm-router-1.ocpsc.redhat.ren"
      restartPolicy: Always
      serviceAccountName: router
      schedulerName: default-scheduler
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            requests:
              cpu: 100m
              memory: 256Mi
          name: router
          env:
            - name: STATS_PORT
              value: "19360"
            - name: WZH_ROUTER_NAME
              value: wzh-router-1
            - name: ROUTER_SERVICE_NAMESPACE
              value: openshift-ingress
            - name: DEFAULT_CERTIFICATE_DIR
              value: /etc/pki/tls/private
            - name: ROUTER_SERVICE_NAME
              value: default
            - name: STATS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsUsername
            - name: STATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsPassword
            - name: ROUTER_METRICS_TYPE
              value: haproxy
            - name: ROUTER_METRICS_TLS_CERT_FILE
              value: /etc/pki/tls/metrics-certs/tls.crt
            - name: ROUTER_METRICS_TLS_KEY_FILE
              value: /etc/pki/tls/metrics-certs/tls.key
            - name: ROUTER_CANONICAL_HOSTNAME
              value: apps.ocp4.redhat.ren
            - name: ROUTER_THREADS
              value: "4"
            - name: TEMPLATE_FILE
              value: /var/lib/haproxy/conf/custom/haproxy-config.template
          ports:
            - name: metrics
              hostPort: 19360
              containerPort: 19360
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: default-certificate
              readOnly: true
              mountPath: /etc/pki/tls/private
            - name: metrics-certs
              readOnly: true
              mountPath: /etc/pki/tls/metrics-certs
            - name: config-volume
              mountPath: /var/lib/haproxy/conf/custom
          terminationMessagePolicy: FallbackToLogsOnError
          image: >-
            quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08ba9cb4f45c557b2ec8cea6528bb60b1efcd3a7588046a71f5babe19e5fc9c0
      serviceAccount: router
      volumes:
        - name: default-certificate
          secret:
            secretName: custom-certs-default
            defaultMode: 420
        - name: metrics-certs
          secret:
            secretName: router-metrics-certs-default
            defaultMode: 420
        - name: config-volume
          configMap:
            name: customrouter-wzh
            defaultMode: 420
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: wzh-router-2
  namespace: openshift-ingress
  labels:
    ingresscontroller.operator.openshift.io/owning-ingresscontroller: wzh-router-2
spec:
  replicas: 1
  selector:
    matchLabels:
      ingresscontroller.operator.openshift.io/deployment-ingresscontroller: wzh-router-2
  template:
    metadata:
      labels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: wzh-router-2
    spec:
      nodeSelector:
        kubernetes.io/hostname: "vm-router-2.ocpsc.redhat.ren"
      restartPolicy: Always
      serviceAccountName: router
      schedulerName: default-scheduler
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            requests:
              cpu: 100m
              memory: 256Mi
          name: router
          env:
            - name: STATS_PORT
              value: "19360"
            - name: WZH_ROUTER_NAME
              value: wzh-router-2
            - name: ROUTER_SERVICE_NAMESPACE
              value: openshift-ingress
            - name: DEFAULT_CERTIFICATE_DIR
              value: /etc/pki/tls/private
            - name: ROUTER_SERVICE_NAME
              value: default
            - name: STATS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsUsername
            - name: STATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsPassword
            - name: ROUTER_METRICS_TYPE
              value: haproxy
            - name: ROUTER_METRICS_TLS_CERT_FILE
              value: /etc/pki/tls/metrics-certs/tls.crt
            - name: ROUTER_METRICS_TLS_KEY_FILE
              value: /etc/pki/tls/metrics-certs/tls.key
            - name: ROUTER_CANONICAL_HOSTNAME
              value: apps.ocp4.redhat.ren
            - name: ROUTER_THREADS
              value: "4"
            - name: TEMPLATE_FILE
              value: /var/lib/haproxy/conf/custom/haproxy-config.template
          ports:
            - name: metrics
              hostPort: 19360
              containerPort: 19360
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: default-certificate
              readOnly: true
              mountPath: /etc/pki/tls/private
            - name: metrics-certs
              readOnly: true
              mountPath: /etc/pki/tls/metrics-certs
            - name: config-volume
              mountPath: /var/lib/haproxy/conf/custom
          terminationMessagePolicy: FallbackToLogsOnError
          image: >-
            quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08ba9cb4f45c557b2ec8cea6528bb60b1efcd3a7588046a71f5babe19e5fc9c0
      serviceAccount: router
      volumes:
        - name: default-certificate
          secret:
            secretName: custom-certs-default
            defaultMode: 420
        - name: metrics-certs
          secret:
            secretName: router-metrics-certs-default
            defaultMode: 420
        - name: config-volume
          configMap:
            name: customrouter-wzh
            defaultMode: 420
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
    